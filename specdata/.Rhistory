read.csv("PD_extraction_comparison.csv", header = TRUE, sep = ",", quote = "\"")
read.csv(PD_extraction_comparison.csv, header = TRUE, sep = ",", quote = "\"")
read.csv("C:\Program Files\R\PD_extraction_comparison.csv", header = TRUE, sep = ",", quote = "\"")
read.csv(C:\Program Files\R\PD_extraction_comparison.csv, header = TRUE, sep = ",", quote = "\"")
getwd()
read.table()read.csv(H:\amiller\RStudio\PD_extraction_comparison.csv, header = TRUE, sep = ",", quote = "\"")
read.csv(H:\amiller\RStudio\PD_extraction_comparison.csv, header = TRUE, sep = ",", quote = "\"")
read.csv(PD_extraction_comparison.csv, header = TRUE, sep = ",", quote = "\"")
read.csv("PD_extraction_comparison.csv", header = TRUE, sep = ",", quote = "\"")
read.csv(PD_extraction_comparison.csv, header = TRUE, sep = ",", quote = "\"")
read.csv(PD_extraction_comparison.csv)
getwd()
read.csv(PD_extraction_comparison)
setwd("C:/Program Files/R/PD_extraction_comparison.csv")
setwd("H:/amiller/RStudio/PD_extraction_comparison.csv")
setwd("H:/amiller/PD_extraction_comparison.csv")
setwd("H:/amiller")
read.csv(PD_extraction_comparison.csv)
read.csv("PD_extraction_comparison.csv")
comparison=read.csv("PD_extraction_comparison.csv")
names(comparison)
plot(comparison$DNA_average, Extraction_Method)
comparison=read.csv("PD_extraction_comparison.csv")
names(comparisonnames(comparison)
names(comparison)
names(comparison)
View(comparison)
View(comparison)
plot(DNA_total, Extraction_Method)
plot(total_DNA, Extraction_Method)
names(comparison)
comaprison=read.csv("PD_extraction_comparison.csv")
names(comparison)
comparison=read.csv("PD_extraction_comparison.csv")
names(comparison)
plot(extraction_method, total_dna)
read.table(comparison)
View(comparison)
plot((table(extraction_method, total_dna))
plot(table(extraction_method, total_dna))
plot(table(extraction_method, total_dna))
plot(table(extraction_method, total_dna))
barplot(table(extraction_method, total_dna))
barplot(table(total_dna, extraction_method))
barplot(table(comparison$total_dna, comparison$extraction_method))
plot(comparison$extraction_method, comparison$total_dna)
plot(table(comparison$total_dna, comparison$extraction_method), xlab='Extraction Method', ylab='Total DNA yield' )
plot((comparison$total_dna, comparison$extraction_method), xlab='Extraction Method', ylab='Total DNA yield' )
plot(comparison$total_dna, comparison$extraction_method), xlab='Extraction Method', ylab='Total DNA yield' )
plot(comparison$total_dna, comparison$extraction_method, xlab='Extraction Method', ylab='Total DNA yield' )
plot(comparison$extraction_method, comparison$total_dna, xlab='Extraction Method', ylab='Total DNA yield' )
plot(comparison$extraction_method, comparison$total_dna, xlab='Extraction Method', ylab='Total DNA yield in nanograms' )
plot(comparison$extraction_method, comparison$total_dna, xlab='DNA Extraction Method', ylab='Total DNA yield in nanograms' )
plot(comparison$extraction_method, comparison$total_dna, xlab='DNA Extraction Method', ylab='Total DNA yield in nanograms', main=" " )
plot(comparison$extraction_method, comparison$total_dna, xlab='DNA Extraction Method', ylab='Total DNA yield in nanograms', main="DNA extraction method versus total yield " )
summary(comparison$extraction_method)
summary(comparison$total_dna)
boxplot(comparison$extraction_method ~ comparison$total_dna)
subset(comparison$extraction_method=="KingFisher")
subset(comparison, comparison$extraction_method=="KingFisher")
summary(subset(comparison, comparison$extraction_method=="KingFisher"))
summary(subset(comparison$extracion_method, comparison$extraction_method=="KingFisher"))
summary(subset(comparison$extraction_method, comparison$extraction_method=="KingFisher"))
subset(comparison$extraction_method, comparison$extraction_method=="KingFisher"))
summary(subset(comparison$total_dna, comparison$extraction_method=="KingFisher"))
summary(subset(comparison$total_dna, comparison$extraction_method=="Myriad"))
head(comparison$extraction_method, comparison$total_dna)
head(comparison)
qnorm(0.01)
qnorm(099,0,1)
qnorm(0.99,0,1)
qnorm(0..9,130,17)
qnorm(0.9,130,17)
qnorm(0.65,130,17)
qnorm(0.95,130,17)
qnorm(0.95,134,17)
pnorm(0.9)
qnorm(.9)
qnorm(.99)
qnorm(.995)
install.packages('knitr', repos='http://cran.rstudio.org')
boxplot(comparison$extraction_method ~ comparison$total_dna)
summary(subset(comparison$total_dna, comparison$extraction_method=="Myriad"))
boxplot(comparison$extraction_method ~ comparison$total_dna)
plot(comparison$extraction_method, comparison$total_dna, xlab='DNA Extraction Method', ylab='Total DNA yield in nanograms', main="DNA extraction method versus total yield " )
head(comparison)
hist(comparison$total_dna)
hist(subset(comparison$total_dna, comparison$extraction_method)
hist(subset(comparison$total_dna, comparison$extraction_method))
hist(subset(comparison$total_dna, comparison$extraction_method))
hist?
?hist
hist(subset(comparison$extraction_method=="Myriad"))
myriad=subset(comparison$extraction_method == "Myriad)")
myriad=subset(comparison$extraction_method == "Myriad")
myriad=(subset(comparison$extraction_method=="Myriad"))
myriad=(subset(comparison$total_dna, comparison$extraction_method=="Myriad"))
kingfisher=(subset(comparison$total_dna, comparison$extraction_method=="Kingfisher"))
hist(myriad)
hist(myriad)
hist(kingfisher)
hist(kingfisher, breaks=9)
hist(myriad, breaks=9)
hist(myriad)
hist(kingfisher)
names(comparison$extraction_method)
summary(comparison_extraction_method)
summary(comparison$extraction_method)
kingfisher=(subset(comparison$total_dna, comparison$extraction_method=="KingFisher"))
hist(kingfisher)
hist(myriad)
plot(kingfisher, myriad)
hist(myriad)
hist(kingfisher)
hist(myriad)
hist(myriad, breaks=6)
hist(kingfisher, breaks=6)
hist(myriad, breaks=9)
hist(kingfisher, breaks=9)
hist(myriad, breaks=9)
hist(myriad, breaks=6)
xlimits=range(KingFisher)
hist(myriad, xlim=xlimits)
xlimits=range(KingFisher)
xlimits=range(kingfisher)
hist(myriad, xlim=xlimits)
hist(kingfisher, xlim=xlimits)
hist(myriad, xlim=xlimits)
hist(kingfisher, xlim=xlimits)
hist(kingfisher)
hist(myriad, xlim=xlimits)
hist(kingfisher)
hist(myriad, xlim=xlimits)
hist(myriad, breaks=6)
hist(kingfisher, breaks=9)
hist(myriad, breaks=7)
hist(myriad, breaks=8)
hist(myriad, breaks=8)
hist(myriad, breaks=7)
hist(myriad, breaks=6)
hist(kingfisher, breaks=9)
hist(myriad, breaks=12)
hist(kingfisher, breaks=18)
hist(myriad, breaks=12)
hist(kingfisher, breaks=12)
hist(myriad, breaks=12)
hist(kingfisher, breaks=14)
hist(kingfisher, breaks=12)
hist(myriad, breaks=12)
myriad_mean=mean(myriad)
kingfisher_mean=mean(kingfisher)
se_myriad=sd(myriad)/sqrt(70)
se_kingfisher=sd(kingfisher)/sqrt(140)
lower_myriad=myriad_mean -1.96*se
lower_myriad=myriad_mean -1.96*se_myriad
upper_myriad-myriad_mean +1.96 *se_myriad
upper_myriad=myriad_mean +1.96 *se_myriad
lower_kingfisher=kingfisher_mean -1.96*se_kingfisher
upper_kingfisher=mean_kingfisher +1.96*se_kingfisher
upper_kingfisher=kingfisher_mean +1.96*se_kingfisher
c(lower_myriad, upper_myriad)
c(lower_kingfisher, upper_kingfisher)
sd(comparison$total_dna)
sd(myriad)
sd(kingfisher)
mean(myriad)
mean(kingfisher)
hist(subset(comparison$extraction_method=="Myriad"))
myriad=(subset(comparison$total_dna, comparison$extraction_method=="Myriad"))
kingfisher=(subset(comparison$total_dna, comparison$extraction_method=="KingFisher"))
hist(myriad, breaks=12)
hist(kingfisher, breaks=12)
xlimits=range(kingfisher)
hist(myriad, xlim=xlimits)
hist(kingfisher)
myriad_mean=mean(myriad)
kingfisher_mean=mean(kingfisher)
se_myriad=sd(myriad)/sqrt(70)
se_kingfisher=sd(kingfisher)/sqrt(140)
lower_myriad=myriad_mean -1.96*se_myriad
upper_myriad=myriad_mean +1.96 *se_myriad
lower_kingfisher=kingfisher_mean -1.96*se_kingfisher
upper_kingfisher=kingfisher_mean +1.96*se_kingfisher
c(lower_myriad, upper_myriad)
c(lower_kingfisher, upper_kingfisher)
sd(comparison$total_dna)
sd(myriad)
sd(kingfisher)
mean(myriad)
mean(kingfisher)
View(comparison)
myriad=(subset(comparison$total_dna, comparison$extraction_method=="Myriad"))
```{r}
```
plot(comparison$extraction_method)
hist(subset(comparison$extraction_method=="Myriad"))
myriad=(subset(comparison$total_dna, comparison$extraction_method=="Myriad"))
hist(subset(comparison$extraction_method=="Myriad"))
mean(kingfisher)
comparison=read.csv("PD_extraction_comparison.csv")
install.packages('git', repos='http://code.google.com/p/msysgit/')
install.packages("http://code.google.com/p/msysgit")
install.git()
install.git()
hist(kingfisher)
setwd("H:/amiller/r programming/specdata")
pollutantmean <- function(directory, pollutant, id = 1:332) {}
pollutantmean <- function(directory="specdata", pollutant ="nitrate", id = 1:332) {}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x == 0] <- 6
x
x[x > 6] <- 0
x
x[x %in% 1:5] <- 0
x
x[x == 0]
x
x <- c(3, 5, 1, 10, 12, 6)
x[x > 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x == 0] <- 6
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
setwd("h:/amiller/r programming")
read.csv("hw1_data.csv")
getwd()
ls()
quizdata<-read.csv("hw1_data.csv")
head(quizdata)
tail(quizdata)
quizdata$ozone
na.omitquizdata)
na.omit(quizdata)
summary(quizdata)
cleaned<-na.omit(quizdata)
summary(quizdata)
summary(cleaned)
head(quizdata)
ozone31<-quizdata$ozone>31
ozone31
ozone31<-cleaned$ozone>31
ozone31
ozone31[1]
ozone31[1, ]
ozone31[1: ]
head(ozone31)
ozone31<-subset(cleaned$ozone>31)
ozone31<-subset(cleaned, ozone>31)
ozone31<-subset(cleaned, quizdata$ozone>31)
ozone31<-subset(quizdata$ozone>31)
subset(quizdata$Ozone>31, quizdata$Temp>90)
subset(cleaned$Ozone>31, cleaned$Temp>90)
ozone_temp>-subset(cleaned$Ozone>31, cleaned$Temp>90)
ozone_temp=subset(cleaned$Ozone>31, cleaned$Temp>90)
summary(ozone_temp)
ozone_temp$Solar.R
complete.cases(quizdata)
full=complete.cases(quizdata)
head(full)
head(cleaned)
cleaned
ozone31=subset(quizdata, cleaned$ozone>31)
View(ozone31)
View(ozone31)
ozone31=subset(quizdata$ozone, cleaned$ozone>31)
fix(ozone31)
ozone31=subset(quizdata$Ozone, cleaned$Ozone>31)
fix(ozone31)
ozone31=subset(quizdata$Ozone, cleaned$Ozone>31)
ozone31
quizdata[1:6,]
good=complete.cases(quizdata)
head(good)
ozone31=subset(quizdata$Ozone>31)
ozone31=subset(quizdata$Ozone>31, quizdata$Temp>90)
ozone31
quizdata$Ozone
new=subset(cleaned$Ozone>31 & cleaned$Temp>90)
new=subset(cleaned$Ozone>31,cleaned$Temp>90)
fix(new)
new=subset(c(cleaned$Ozone>31,cleaned$Temp>90))
new=subset(c(cleaned=Ozone>31,cleaned=Temp>90))
ozone31=subset(quizdata$Ozone>31, quizdata$Temp>90)
ozone31
ozone31=na.omit(ozone31)
fix(ozone31)
ozone31=na.omit(c(ozone31))
fix(ozone31)
ozone31<-ozone31[Solar.R]
ozone31=subset(c(cleaned$Ozone>31, cleaned$Temp>90
fix(ozone31)
ozone31=subset(c(cleaned$Ozone>31, cleaned$Temp>90))
na.omit(quizdata)
cleaned<-na.omit(quizdata)
cleaned
ozone31=subset(cleaned, cleaned$Ozone>31)
ozone31
temp90=subset(ozone31, cleaned$Temp>90)
temp90
temp90=subset(cleaned, cleaned$Temp>90)
temp90
summary(temp90)
month6=subset(cleaned, cleaned$Month=6)
cleaned
month6=subset(cleaned, cleaned$Month=6)
month6=subset(cleaned, cleaned$Month==6)
summary(month6)
month6
month6=subset(quizdata, quizdata$Month==6)
month6
summary(month6)
month5=subset(quizdata, quizdata$Month==5)
month5
summary(month5)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
x
head(quizdata)
tail(quizdata)
pollutantmean <- mean(specdata, nitrate, id = 1:332) {}
}
pollutantmean <- mean(specdata, nitrate, id = 1:332)
pollutantmean <- mean(directory=specdata, nitrate, id = 1:332)
pollutantmean <- mean(directory=specdata, pollutant=nitrate, id = 1:332)
pollutantmean <- mean(specdata, pollutant=nitrate, id = 1:332)
pollutantmean <- mean(specdata$nitrate, id = 1:332)
pollutantmean <- mean("specdata", "nitrate",id = 1:332)
na.omit("specdata")
cleaned=na.omit("specdata")
cleaned
cleaned=na.omit(specdata)
cleaned=na.omit(directory="specdata")
cleaned=na.omit("specdata", "nitrate", id=1:332)
getwd()
setwd("h:/amiller/r programming/specdata")
pollutantmean <- mean("specdata", "nitrate",id = 1:332)
cleaned=na.omit("specdata", "nitrate", id=1:332)
pollutantmean <- mean(specdata, nitrate,id = 1:332)
setwd("h:/amiller/r programming/")
pollutantmean <- mean(specdata, nitrate,id = 1:332)
dir.create("h:/amiller/r programming/specdata")
pollutantmean <- function(specdata, nitrate, id = 1:332)
pollutantmean <- function(specdata, nitrate, id = 1:332){}
fix(pollutantmean)
pollutantmean <- function(specdata, nitrate, id = 1:332)
fix(pollutantmean)
pollutantmean <- mean(specdata, nitrate, id = 1:332)
pollutantmean <- mean("specdata", nitrate, id = 1:332)
pollutantmean <- mean("specdata", "nitrate", id = 1:332)
pollutantmean <- function("specdata", "nitrate", id = 1:332)
pollutantmean <- function(directory="specdata", "nitrate", id = 1:332)
pollutantmean <- function(directory=specdata, "nitrate", id = 1:332)
pollutantmean <- function(directory=specdata, nitrate, id = 1:332)
pollutantmean <- function(directory=specdata, pollutant=nitrate, id = 1:332)
pollutantmean <- mean(directory=specdata, pollutant=nitrate, id = 1:332)
fix(pollutantmean)
read.csv("specdata")
read.csv(directory="specdata")
read.csv("h:/amiller/r programming/specdata/")
read.csv("h:/amiller/r programming/")
read.csv("h:/amiller/r programming/specdata.csv)
read.csv("h:/amiller/r programming/specdata/specdata.csv)
read.csv("h:/amiller/r programming/specdata/specdata.csv")
read.csv("h:/amiller/r programming/specdata"/specdata.csv")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:332)
mean(pollutantmean)
pollutantmean <- mean("specdata", "nitrate",id = 1:332)
pollutantmean <- ("specdata", "nitrate",id = 1:332)
pollutantmean <- (specdata, nitrate,id = 1:332)
pollutantmean <- (specdata= nitrate,id = 1:332)
pollutantmean <- (specdata==nitrate,id = 1:332)
pollutantmean <- read.cvs(specdata,nitrate,id = 1:332)
pollutantmean <- read.csv(specdata,nitrate,id = 1:332)
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- ("specdata","nitrate:,23)
pollutantmean <- mean("specdata","nitrate:,23)
pollutantmean <- mean("specdata","nitrate,23)
pollutantmean <- function("specdata","nitrate",23)
pollutantmean <- function(directory, pollutant, id = 1:332)
pollutantmean <- function(directory, pollutant, id = 1:332)
pollutantmean <- function(directory, pollutant, id = 1:332){}
fix(pollutantmean)
pollutantmean("specdata", "nitrate", 70:72)
mean(pollutantmean("specdata", "nitrate", 70:72))
pollutantmean("specdata", "nitrate", 70:72)
mean(pollutantmean)
result=pollutantmean("specdata", "nitrate", 70:72)
result
result=pollutantmean("specdata", "nitrate", 1)
result
}
cube <- function(x, n) {
cube<- function(x,n) { x^3}
cube<- function(x,n) {x^3}
cube <- function(x, n) {
x^3
}
cube<- function(x,n) {}
cube<- function(x,n) {
x^3
}
x<- matrix(1:6, 2, 3)
}
x<- matrix(1:6, 2, 3)
cube<- function(x,n) {x^3}
cube(3)
x<- matrix(1:6, 2, 3)
for(i in seq_len(nrow(x))) {for(j in seq_len(ncol(x)) {print(x[i, j])}}
for(i in seq_len(nrow(x))) {for(j in seq_len(ncol(x)) print(x[i, j])}
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x)){
print(x[i, j])
}
}
x<- matrix(1:6, 2, 3)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x)){
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x)) {
print(x[i, j])
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x)) {
print(x[i, j])
}
}
for(i in seq_len(nrow(x))) {for(j in seq_len(ncol(x)) {print(x[i, j])}}
x <- 1:10
}
if(x > 5) {
x <- 0
}
if(x > 5)   x <- 0
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
source("pollutantmean.r")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.r")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332){
mean(pollutant)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 332)
"specdata/001.csv"
pollutantmean("specdata", "sulfate", 332)
"specdata/332.csv"
read.csv("specdata/332.csv")
spec332=read.csv("specdata/332.csv")
mean(spec332$nitrate)
summary(spec332)
mean(spec332$nitrate)
mean(spec332==nitrate)
summary(spec332)
na.omit(spec332)
cleaned332=na.omit(spec332)
mean(cleaned$nitrate)
mean(cleaned332$nitrate)
summary(cleaned332)
mystring<-paste("blue", "green", sep="")
mystring<-paste("1", ".csv", sep="")
x=1
sprintf("%03d",x)
mycsvlist <- lapply( 1:332, function(x) read.csv( sprintf("%03d-XXX.csv", x) ) )
mycsvlist <- lapply( 1:332, function(x) read.csv( sprintf("%03d.csv", x) ) )
setwd("H:/amiller/r programming/specdata")
mycsvlist <- lapply( 1:332, function(x) read.csv( sprintf("%03d.csv", x) ) )
na.omit(mycsvlist)
summary(mycsvlist)
summary(mycsvlist$nitrate)
my_mean <- mean(mycsvlist[,nitrate], na.rm=TRUE)
my_mean <- mean(mycsvlist[,pollutant], na.rm=TRUE)
my_mean <- mean(mycsvlist[,mycsvlist$nitrate], na.rm=TRUE)
my_mean <- mean(mycsvlist[,pollutant], na.rm=TRUE)
mycsvlist <- read.csv(lapply( 1:332, function(x) read.csv( sprintf("%03d.csv", x) ) ))
my_mean <- mean(mycsvlist[,pollutant], na.rm=TRUE)
fix(mycsvlist)
my_mean <- mean(mycsvlist[,pollutant], na.rm=TRUE)
cleaned=na.omit(mycsvlist)
setwd("H:/amiller/r programming/specdata")
